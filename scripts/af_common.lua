---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by licycle.
--- DateTime: 2022/9/22 下午2:26
---

local af_common = {}

function af_common:get_env(env, default_value)
    if os.getenv(env)==nil then
        return default_value or nil
    end
    return os.getenv(env)
end

local function serialize(obj)
    local lua = ""
    local t = type(obj)
    if t == "number" then
        lua = lua .. obj
    elseif t == "boolean" then
        lua = lua .. tostring(obj)
    elseif t == "string" then
        lua = lua .. string.format("%q", obj)
    elseif t == "table" then
        lua = lua .. "{\n"
    for k, v in pairs(obj) do
        lua = lua .. "[" .. serialize(k) .. "]=" .. serialize(v) .. ",\n"
    end
    local metatable = getmetatable(obj)
        if metatable ~= nil and type(metatable.__index) == "table" then
        for k, v in pairs(metatable.__index) do
            lua = lua .. "[" .. serialize(k) .. "]=" .. serialize(v) .. ",\n"
        end
    end
        lua = lua .. "}"
    elseif t == "nil" then
        return ''
    else
        return ''
    end
    return lua
end

local function logger(...)
    local rs=""
    for i=1 , select('#',...) do
        local ri = select(i,...)
        rs = rs..serialize(ri)
    end
    ngx.log(ngx.ERR, rs)
end

af_common.log=(ngx and {logger}  or {print})[1]


return af_common